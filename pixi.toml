[project]
name = "claude-code-sdk-langchain"
description = "Claude Code SDK for LangChain integration"
channels = ["conda-forge"]
platforms = ["linux-64", "osx-arm64", "osx-64", "win-64"]

[dependencies]
python = "3.11.*"
# Core LangChain stack
langchain = "*"
langchain-core = "*"
langchain-community = "*"
langgraph = "*"
# HTTP client for API calls
httpx = "*"
# Async support
aiofiles = "*"
# JSON handling
pydantic = ">=2.0"
# Environment variables
python-dotenv = "*"
# Development essentials
pytest = "*"
pytest-asyncio = "*"
pytest-mock = "*"
black = "*"
ruff = "*"
mypy = "*"
# Documentation
mkdocs = "*"
mkdocs-material = "*"

[tasks]
# Core development tasks
test = "pytest specs/ -v"
test-watch = "pytest specs/ -v --tb=short -f"
lint = "ruff check src/ specs/"
format = "black src/ specs/ scripts/"
format-check = "black --check src/ specs/ scripts/"
typecheck = "mypy src/"
check = { depends-on = ["format-check", "lint", "typecheck"] }

# Documentation tasks
docs-serve = "mkdocs serve"
docs-build = "mkdocs build"

# Utility tasks
clean = "find . -type d -name __pycache__ -exec rm -rf {} + 2>/dev/null || true && find . -name '*.pyc' -delete 2>/dev/null || true"
clean-build = "rm -rf dist/ build/ src/*.egg-info 2>/dev/null || true"
install-dev = "pip install -e ."

# Demo and examples
demo = "python scripts/demo.py"
examples = "python scripts/run_examples.py"

# Publishing and deployment tasks
build-package = { cmd = "python -m build", depends-on = ["clean-build"] }
validate-package = { cmd = "twine check dist/*", depends-on = ["build-package"] }
publish-test = { cmd = "twine upload --repository testpypi dist/*", depends-on = ["validate-package"] }
publish-pypi = { cmd = "twine upload dist/*", depends-on = ["validate-package"] }
publish = { depends-on = ["check", "test", "publish-pypi"] }

# Interactive deployment (full pipeline with prompts)
deploy = "python scripts/deploy.py --skip-tests"
deploy-with-tests = "python scripts/deploy.py"
deploy-test = "python scripts/deploy.py --target testpypi --skip-tests"
deploy-dry-run = "python scripts/deploy.py --dry-run"

[activation.env]
PYTHONPATH = "$PWD/src"
CLAUDE_SDK_ENV = "development"
# Model for tests - use haiku for speed, sonnet for quality
CLAUDE_TEST_MODEL = "haiku"

[pypi-dependencies]
claude-code-sdk = ">=0.0.23, <0.0.24"
build = ">=1.3.0, <2"
twine = ">=6.2.0, <7"
